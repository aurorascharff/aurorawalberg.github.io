{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/page/chart-container/chart-container.component.html","./src/app/page/chart-container/chart-container.component.ts","./src/app/page/chart-container/chart/chart.component.html","./src/app/page/chart-container/chart/chart.component.ts","./src/app/page/page.component.html","./src/app/page/page.component.ts","./src/app/shared/services/content.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PageComponent } from './page/page.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'page',\n    pathMatch: 'full'\n  },\n  { path: 'page', component: PageComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\nimport * as Highcharts from 'highcharts';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'axeptia-case-application';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PageComponent } from './page/page.component';\nimport { HighchartsChartModule } from 'highcharts-angular';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatCardModule} from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { ChartContainerComponent } from './page/chart-container/chart-container.component';\nimport { ChartComponent } from './page/chart-container/chart/chart.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PageComponent,\n    ChartContainerComponent,\n    ChartComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HighchartsChartModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<div id= \"filter\">\n  <mat-form-field>\n    <mat-label>Maximum Ã¥rsresultat bedrift</mat-label>\n    <input matInput #input>\n  </mat-form-field>\n  <div id = \"button\">\n    <button mat-stroked-button (click) = filter(input.value)>\n      Filtrer\n    </button>\n  </div>\n</div>\n\n<app-chart [chartInput] = chartInput>\n</app-chart>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ContentService } from 'src/app/shared/services/content.service';\nimport { CompanyModel } from 'src/app/shared/models/CompanyModel';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-chart-container',\n  templateUrl: './chart-container.component.html',\n  styleUrls: ['./chart-container.component.css']\n})\nexport class ChartContainerComponent implements OnInit, OnDestroy {\n\n  private companies: CompanyModel[] = [];\n  private values: { [industrycode: string]: number; } = {};\n  private ngUnsubscribe: Subject<any> = new Subject<any>();\n  public chartInput: (string | number)[][] = [];\n\n  constructor(private contentService: ContentService) { }\n\n  /**\n   * On init, set up the chartData stream for listening in our container\n   * (data processing) component. Allow the subscribtion to last until unsub.\n   * Let companies be the chartData recieved. Then, trigger data load from json\n   * file in the service.\n   */\n  ngOnInit(): void {\n    this.contentService.chartData$.pipe(takeUntil(this.ngUnsubscribe)).subscribe(data => {\n      this.companies = data;\n      this.processData(data);\n    });\n    this.contentService.getData();\n  }\n\n  /**\n   * On destroy, unsub to the data stream to avoid data transfer\n   * of unused data.\n   */\n  ngOnDestroy(): void {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n\n  /**\n   * Process list of companies by yearly results, add by industry,\n   * generate and update input for child component.\n   * @param data all companies to process\n   */\n  processData(data: CompanyModel[]) {\n    this.values = {};\n    const output: (string | number)[][] = [];\n\n    data.forEach(element => {\n      if (this.values[element.beskrivelse] == null) {\n        this.values[element.beskrivelse] = element.Ã¥rsresultat;\n      } else {\n        this.values[element.beskrivelse] += element.Ã¥rsresultat;\n      }\n    });\n\n    Object.entries(this.values).forEach((key => {\n      const graphItem = [key[0], key[1]];\n      output.push(graphItem);\n    }));\n    this.chartInput = output;\n  }\n\n  /**\n   * Filters chart container component for companies with yearly results\n   * above given amount\n   * @param maxResult maximum yearly result\n   */\n  filter(maxResult: number) {\n    this.chartInput = [];\n    const filteredCompanies: CompanyModel[] = [];\n\n    this.companies.forEach(element => {\n      if (element.Ã¥rsresultat <= maxResult) {\n        filteredCompanies.push(element);\n      }\n    });\n    this.processData(filteredCompanies);\n  }\n}\n","<highcharts-chart\r\n      [Highcharts]=\"Highcharts\"\r\n      [options]=\"chartOptions\"\r\n      [(update)] = \"updateFlag\"\r\n      style=\"width: 100%; height: 700px; display: block;\"\r\n></highcharts-chart>\r\n","import { Component, OnInit, ChangeDetectionStrategy, Input, SimpleChanges } from '@angular/core';\nimport * as Highcharts from 'highcharts';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n  })\nexport class ChartComponent implements OnInit {\n\n  @Input() chartInput: number[][];\n\n  /**\n   * Highcharts component setup.\n   */\n  Highcharts: typeof Highcharts = Highcharts;\n  chartOptions: Highcharts.Options = {\n    title: {\n      text: 'Ãrsresultat for bedrifer summert pÃ¥ bransjer'\n    },\n    series: [{\n      name: 'Ãrsresultat',\n      type: 'bar',\n      data: this.chartInput\n    }]\n  };\n\n  updateFlag = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  /**\n   * When changes on graph input variable (detected by changeDetectionStrategy.OnPush),\n   * render the new data to graph.\n   * @param changes changes on component input variables\n   */\n  // tslint:disable-next-line: use-lifecycle-interface\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.chartInput != null && changes.chartInput.currentValue != null) {\n      this.renderData();\n    }\n  }\n\n  /**\n   * Renders new data to the highchart chart.\n   */\n  renderData() {\n    this.chartOptions.\n    series = [{\n      name: 'Ãrsresultat',\n      color: 'darkblue',\n      data: this.chartInput,\n      type: 'bar',\n      dataLabels: {\n        enabled: true,\n        format: '{point.name}'\n      }\n    }];\n    this.updateFlag = true;\n  }\n\n}\n","<div id = \"card\">\n  <mat-card>\n    <mat-card-header>\n      <mat-card-title>\n        <h2>Ãrsresultat for bedrifer</h2>\n      </mat-card-title>\n      <mat-card-subtitle>Casearbeid gjort for Axeptia Credit Intelligence i forbindelse med jobbsÃ¸knad</mat-card-subtitle>\n    </mat-card-header>\n  </mat-card>\n</div>\n\n<app-chart-container></app-chart-container>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page',\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.component.css']\n})\nexport class PageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { CompanyModel } from '../models/CompanyModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContentService {\n\n  private datapath = '../../../assets/utrekk.json';\n\n  /**\n   * Datasource setup. Creates subject list for data and sets up data\n   * stream from this as observable.\n   */\n  private chartDataSubject: Subject<CompanyModel[]> = new Subject<CompanyModel[]>();\n  public chartData$: Observable<CompanyModel[]> = this.chartDataSubject.asObservable();\n\n  constructor(private http: HttpClient) { }\n\n  /**\n   * Gets data from the JSON file and fills the chartData stream.\n   */\n  getData() {\n    this.http.get<CompanyModel[]>(this.datapath).subscribe((response) => {\n      this.chartDataSubject.next(response);\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}